// source: nuance/nlu/v1/multi-intent-interpretation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var nuance_nlu_v1_interpretation$common_pb = require('../../../nuance/nlu/v1/interpretation-common_pb.js');
goog.object.extend(proto, nuance_nlu_v1_interpretation$common_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.nuance.nlu.v1.EntityNode', null, global);
goog.exportSymbol('proto.nuance.nlu.v1.EntityNode.ValueUnionCase', null, global);
goog.exportSymbol('proto.nuance.nlu.v1.EnumOperator', null, global);
goog.exportSymbol('proto.nuance.nlu.v1.IntentNode', null, global);
goog.exportSymbol('proto.nuance.nlu.v1.InterpretationNode', null, global);
goog.exportSymbol('proto.nuance.nlu.v1.InterpretationNode.InterpretationNodeUnionCase', null, global);
goog.exportSymbol('proto.nuance.nlu.v1.MultiIntentInterpretation', null, global);
goog.exportSymbol('proto.nuance.nlu.v1.OperatorNode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.nlu.v1.MultiIntentInterpretation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.nlu.v1.MultiIntentInterpretation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.nlu.v1.MultiIntentInterpretation.displayName = 'proto.nuance.nlu.v1.MultiIntentInterpretation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.nlu.v1.InterpretationNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.nuance.nlu.v1.InterpretationNode.oneofGroups_);
};
goog.inherits(proto.nuance.nlu.v1.InterpretationNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.nlu.v1.InterpretationNode.displayName = 'proto.nuance.nlu.v1.InterpretationNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.nlu.v1.OperatorNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.nlu.v1.OperatorNode.repeatedFields_, null);
};
goog.inherits(proto.nuance.nlu.v1.OperatorNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.nlu.v1.OperatorNode.displayName = 'proto.nuance.nlu.v1.OperatorNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.nlu.v1.IntentNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.nlu.v1.IntentNode.repeatedFields_, null);
};
goog.inherits(proto.nuance.nlu.v1.IntentNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.nlu.v1.IntentNode.displayName = 'proto.nuance.nlu.v1.IntentNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.nlu.v1.EntityNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.nlu.v1.EntityNode.repeatedFields_, proto.nuance.nlu.v1.EntityNode.oneofGroups_);
};
goog.inherits(proto.nuance.nlu.v1.EntityNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.nlu.v1.EntityNode.displayName = 'proto.nuance.nlu.v1.EntityNode';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.nlu.v1.MultiIntentInterpretation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.nlu.v1.MultiIntentInterpretation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.toObject = function(includeInstance, msg) {
  var f, obj = {
    root: (f = msg.getRoot()) && proto.nuance.nlu.v1.InterpretationNode.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.nlu.v1.MultiIntentInterpretation}
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.nlu.v1.MultiIntentInterpretation;
  return proto.nuance.nlu.v1.MultiIntentInterpretation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.nlu.v1.MultiIntentInterpretation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.nlu.v1.MultiIntentInterpretation}
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.nlu.v1.InterpretationNode;
      reader.readMessage(value,proto.nuance.nlu.v1.InterpretationNode.deserializeBinaryFromReader);
      msg.setRoot(value);
      break;
    case 13:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.nlu.v1.MultiIntentInterpretation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.nlu.v1.MultiIntentInterpretation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.nlu.v1.InterpretationNode.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
};


/**
 * optional InterpretationNode root = 1;
 * @return {?proto.nuance.nlu.v1.InterpretationNode}
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.getRoot = function() {
  return /** @type{?proto.nuance.nlu.v1.InterpretationNode} */ (
    jspb.Message.getWrapperField(this, proto.nuance.nlu.v1.InterpretationNode, 1));
};


/**
 * @param {?proto.nuance.nlu.v1.InterpretationNode|undefined} value
 * @return {!proto.nuance.nlu.v1.MultiIntentInterpretation} returns this
*/
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.setRoot = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.MultiIntentInterpretation} returns this
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.clearRoot = function() {
  return this.setRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.hasRoot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, google.protobuf.Any> metadata = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.nlu.v1.MultiIntentInterpretation} returns this
 */
proto.nuance.nlu.v1.MultiIntentInterpretation.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.nuance.nlu.v1.InterpretationNode.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.nuance.nlu.v1.InterpretationNode.InterpretationNodeUnionCase = {
  INTERPRETATION_NODE_UNION_NOT_SET: 0,
  OPERATOR: 1,
  INTENT: 2,
  ENTITY: 3
};

/**
 * @return {proto.nuance.nlu.v1.InterpretationNode.InterpretationNodeUnionCase}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.getInterpretationNodeUnionCase = function() {
  return /** @type {proto.nuance.nlu.v1.InterpretationNode.InterpretationNodeUnionCase} */(jspb.Message.computeOneofCase(this, proto.nuance.nlu.v1.InterpretationNode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.nlu.v1.InterpretationNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.nlu.v1.InterpretationNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.InterpretationNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    operator: (f = msg.getOperator()) && proto.nuance.nlu.v1.OperatorNode.toObject(includeInstance, f),
    intent: (f = msg.getIntent()) && proto.nuance.nlu.v1.IntentNode.toObject(includeInstance, f),
    entity: (f = msg.getEntity()) && proto.nuance.nlu.v1.EntityNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.nlu.v1.InterpretationNode}
 */
proto.nuance.nlu.v1.InterpretationNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.nlu.v1.InterpretationNode;
  return proto.nuance.nlu.v1.InterpretationNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.nlu.v1.InterpretationNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.nlu.v1.InterpretationNode}
 */
proto.nuance.nlu.v1.InterpretationNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.nlu.v1.OperatorNode;
      reader.readMessage(value,proto.nuance.nlu.v1.OperatorNode.deserializeBinaryFromReader);
      msg.setOperator(value);
      break;
    case 2:
      var value = new proto.nuance.nlu.v1.IntentNode;
      reader.readMessage(value,proto.nuance.nlu.v1.IntentNode.deserializeBinaryFromReader);
      msg.setIntent(value);
      break;
    case 3:
      var value = new proto.nuance.nlu.v1.EntityNode;
      reader.readMessage(value,proto.nuance.nlu.v1.EntityNode.deserializeBinaryFromReader);
      msg.setEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.nlu.v1.InterpretationNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.nlu.v1.InterpretationNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.InterpretationNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.nlu.v1.OperatorNode.serializeBinaryToWriter
    );
  }
  f = message.getIntent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.nlu.v1.IntentNode.serializeBinaryToWriter
    );
  }
  f = message.getEntity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuance.nlu.v1.EntityNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional OperatorNode operator = 1;
 * @return {?proto.nuance.nlu.v1.OperatorNode}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.getOperator = function() {
  return /** @type{?proto.nuance.nlu.v1.OperatorNode} */ (
    jspb.Message.getWrapperField(this, proto.nuance.nlu.v1.OperatorNode, 1));
};


/**
 * @param {?proto.nuance.nlu.v1.OperatorNode|undefined} value
 * @return {!proto.nuance.nlu.v1.InterpretationNode} returns this
*/
proto.nuance.nlu.v1.InterpretationNode.prototype.setOperator = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.nuance.nlu.v1.InterpretationNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.InterpretationNode} returns this
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.clearOperator = function() {
  return this.setOperator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.hasOperator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional IntentNode intent = 2;
 * @return {?proto.nuance.nlu.v1.IntentNode}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.getIntent = function() {
  return /** @type{?proto.nuance.nlu.v1.IntentNode} */ (
    jspb.Message.getWrapperField(this, proto.nuance.nlu.v1.IntentNode, 2));
};


/**
 * @param {?proto.nuance.nlu.v1.IntentNode|undefined} value
 * @return {!proto.nuance.nlu.v1.InterpretationNode} returns this
*/
proto.nuance.nlu.v1.InterpretationNode.prototype.setIntent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.nuance.nlu.v1.InterpretationNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.InterpretationNode} returns this
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.clearIntent = function() {
  return this.setIntent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.hasIntent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EntityNode entity = 3;
 * @return {?proto.nuance.nlu.v1.EntityNode}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.getEntity = function() {
  return /** @type{?proto.nuance.nlu.v1.EntityNode} */ (
    jspb.Message.getWrapperField(this, proto.nuance.nlu.v1.EntityNode, 3));
};


/**
 * @param {?proto.nuance.nlu.v1.EntityNode|undefined} value
 * @return {!proto.nuance.nlu.v1.InterpretationNode} returns this
*/
proto.nuance.nlu.v1.InterpretationNode.prototype.setEntity = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.nuance.nlu.v1.InterpretationNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.InterpretationNode} returns this
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.clearEntity = function() {
  return this.setEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.InterpretationNode.prototype.hasEntity = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.nlu.v1.OperatorNode.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.nlu.v1.OperatorNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.nlu.v1.OperatorNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.OperatorNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    operator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    textRange: (f = msg.getTextRange()) && nuance_nlu_v1_interpretation$common_pb.TextRange.toObject(includeInstance, f),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.nuance.nlu.v1.InterpretationNode.toObject, includeInstance),
    literal: jspb.Message.getFieldWithDefault(msg, 8, ""),
    sensitive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    formattedLiteral: jspb.Message.getFieldWithDefault(msg, 11, ""),
    formattedTextRange: (f = msg.getFormattedTextRange()) && nuance_nlu_v1_interpretation$common_pb.TextRange.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    audioRange: (f = msg.getAudioRange()) && nuance_nlu_v1_interpretation$common_pb.AudioRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.nlu.v1.OperatorNode}
 */
proto.nuance.nlu.v1.OperatorNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.nlu.v1.OperatorNode;
  return proto.nuance.nlu.v1.OperatorNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.nlu.v1.OperatorNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.nlu.v1.OperatorNode}
 */
proto.nuance.nlu.v1.OperatorNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nuance.nlu.v1.EnumOperator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 2:
      var value = new nuance_nlu_v1_interpretation$common_pb.TextRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.TextRange.deserializeBinaryFromReader);
      msg.setTextRange(value);
      break;
    case 5:
      var value = new proto.nuance.nlu.v1.InterpretationNode;
      reader.readMessage(value,proto.nuance.nlu.v1.InterpretationNode.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLiteral(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSensitive(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormattedLiteral(value);
      break;
    case 12:
      var value = new nuance_nlu_v1_interpretation$common_pb.TextRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.TextRange.deserializeBinaryFromReader);
      msg.setFormattedTextRange(value);
      break;
    case 13:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 15:
      var value = new nuance_nlu_v1_interpretation$common_pb.AudioRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.AudioRange.deserializeBinaryFromReader);
      msg.setAudioRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.nlu.v1.OperatorNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.nlu.v1.OperatorNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.OperatorNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTextRange();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      nuance_nlu_v1_interpretation$common_pb.TextRange.serializeBinaryToWriter
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.nuance.nlu.v1.InterpretationNode.serializeBinaryToWriter
    );
  }
  f = message.getLiteral();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSensitive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getFormattedLiteral();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFormattedTextRange();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      nuance_nlu_v1_interpretation$common_pb.TextRange.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getAudioRange();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      nuance_nlu_v1_interpretation$common_pb.AudioRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional EnumOperator operator = 1;
 * @return {!proto.nuance.nlu.v1.EnumOperator}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getOperator = function() {
  return /** @type {!proto.nuance.nlu.v1.EnumOperator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nuance.nlu.v1.EnumOperator} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional TextRange text_range = 2;
 * @return {?proto.nuance.nlu.v1.TextRange}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getTextRange = function() {
  return /** @type{?proto.nuance.nlu.v1.TextRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.TextRange, 2));
};


/**
 * @param {?proto.nuance.nlu.v1.TextRange|undefined} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
*/
proto.nuance.nlu.v1.OperatorNode.prototype.setTextRange = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.clearTextRange = function() {
  return this.setTextRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.hasTextRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated InterpretationNode children = 5;
 * @return {!Array<!proto.nuance.nlu.v1.InterpretationNode>}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.nuance.nlu.v1.InterpretationNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.nlu.v1.InterpretationNode, 5));
};


/**
 * @param {!Array<!proto.nuance.nlu.v1.InterpretationNode>} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
*/
proto.nuance.nlu.v1.OperatorNode.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.nuance.nlu.v1.InterpretationNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.nlu.v1.InterpretationNode}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.nuance.nlu.v1.InterpretationNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


/**
 * optional string literal = 8;
 * @return {string}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getLiteral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.setLiteral = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool sensitive = 9;
 * @return {boolean}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getSensitive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.setSensitive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string formatted_literal = 11;
 * @return {string}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getFormattedLiteral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.setFormattedLiteral = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional TextRange formatted_text_range = 12;
 * @return {?proto.nuance.nlu.v1.TextRange}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getFormattedTextRange = function() {
  return /** @type{?proto.nuance.nlu.v1.TextRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.TextRange, 12));
};


/**
 * @param {?proto.nuance.nlu.v1.TextRange|undefined} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
*/
proto.nuance.nlu.v1.OperatorNode.prototype.setFormattedTextRange = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.clearFormattedTextRange = function() {
  return this.setFormattedTextRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.hasFormattedTextRange = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * map<string, google.protobuf.Any> metadata = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional AudioRange audio_range = 15;
 * @return {?proto.nuance.nlu.v1.AudioRange}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.getAudioRange = function() {
  return /** @type{?proto.nuance.nlu.v1.AudioRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.AudioRange, 15));
};


/**
 * @param {?proto.nuance.nlu.v1.AudioRange|undefined} value
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
*/
proto.nuance.nlu.v1.OperatorNode.prototype.setAudioRange = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.OperatorNode} returns this
 */
proto.nuance.nlu.v1.OperatorNode.prototype.clearAudioRange = function() {
  return this.setAudioRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.OperatorNode.prototype.hasAudioRange = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.nlu.v1.IntentNode.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.nlu.v1.IntentNode.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.nlu.v1.IntentNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.nlu.v1.IntentNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.IntentNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    textRange: (f = msg.getTextRange()) && nuance_nlu_v1_interpretation$common_pb.TextRange.toObject(includeInstance, f),
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    origin: jspb.Message.getFieldWithDefault(msg, 4, 0),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.nuance.nlu.v1.InterpretationNode.toObject, includeInstance),
    literal: jspb.Message.getFieldWithDefault(msg, 8, ""),
    sensitive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    formattedLiteral: jspb.Message.getFieldWithDefault(msg, 11, ""),
    formattedTextRange: (f = msg.getFormattedTextRange()) && nuance_nlu_v1_interpretation$common_pb.TextRange.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    audioRange: (f = msg.getAudioRange()) && nuance_nlu_v1_interpretation$common_pb.AudioRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.nlu.v1.IntentNode}
 */
proto.nuance.nlu.v1.IntentNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.nlu.v1.IntentNode;
  return proto.nuance.nlu.v1.IntentNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.nlu.v1.IntentNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.nlu.v1.IntentNode}
 */
proto.nuance.nlu.v1.IntentNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new nuance_nlu_v1_interpretation$common_pb.TextRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.TextRange.deserializeBinaryFromReader);
      msg.setTextRange(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setConfidence(value);
      break;
    case 4:
      var value = /** @type {!proto.nuance.nlu.v1.EnumOrigin} */ (reader.readEnum());
      msg.setOrigin(value);
      break;
    case 5:
      var value = new proto.nuance.nlu.v1.InterpretationNode;
      reader.readMessage(value,proto.nuance.nlu.v1.InterpretationNode.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLiteral(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSensitive(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormattedLiteral(value);
      break;
    case 12:
      var value = new nuance_nlu_v1_interpretation$common_pb.TextRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.TextRange.deserializeBinaryFromReader);
      msg.setFormattedTextRange(value);
      break;
    case 13:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 15:
      var value = new nuance_nlu_v1_interpretation$common_pb.AudioRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.AudioRange.deserializeBinaryFromReader);
      msg.setAudioRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.nlu.v1.IntentNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.nlu.v1.IntentNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.nlu.v1.IntentNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.IntentNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTextRange();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      nuance_nlu_v1_interpretation$common_pb.TextRange.serializeBinaryToWriter
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOrigin();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.nuance.nlu.v1.InterpretationNode.serializeBinaryToWriter
    );
  }
  f = message.getLiteral();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSensitive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getFormattedLiteral();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFormattedTextRange();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      nuance_nlu_v1_interpretation$common_pb.TextRange.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getAudioRange();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      nuance_nlu_v1_interpretation$common_pb.AudioRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TextRange text_range = 2;
 * @return {?proto.nuance.nlu.v1.TextRange}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getTextRange = function() {
  return /** @type{?proto.nuance.nlu.v1.TextRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.TextRange, 2));
};


/**
 * @param {?proto.nuance.nlu.v1.TextRange|undefined} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
*/
proto.nuance.nlu.v1.IntentNode.prototype.setTextRange = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.clearTextRange = function() {
  return this.setTextRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.IntentNode.prototype.hasTextRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float confidence = 3;
 * @return {number}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional EnumOrigin origin = 4;
 * @return {!proto.nuance.nlu.v1.EnumOrigin}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getOrigin = function() {
  return /** @type {!proto.nuance.nlu.v1.EnumOrigin} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.nuance.nlu.v1.EnumOrigin} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.setOrigin = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated InterpretationNode children = 5;
 * @return {!Array<!proto.nuance.nlu.v1.InterpretationNode>}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.nuance.nlu.v1.InterpretationNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.nlu.v1.InterpretationNode, 5));
};


/**
 * @param {!Array<!proto.nuance.nlu.v1.InterpretationNode>} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
*/
proto.nuance.nlu.v1.IntentNode.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.nuance.nlu.v1.InterpretationNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.nlu.v1.InterpretationNode}
 */
proto.nuance.nlu.v1.IntentNode.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.nuance.nlu.v1.InterpretationNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


/**
 * optional string literal = 8;
 * @return {string}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getLiteral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.setLiteral = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool sensitive = 9;
 * @return {boolean}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getSensitive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.setSensitive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string formatted_literal = 11;
 * @return {string}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getFormattedLiteral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.setFormattedLiteral = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional TextRange formatted_text_range = 12;
 * @return {?proto.nuance.nlu.v1.TextRange}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getFormattedTextRange = function() {
  return /** @type{?proto.nuance.nlu.v1.TextRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.TextRange, 12));
};


/**
 * @param {?proto.nuance.nlu.v1.TextRange|undefined} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
*/
proto.nuance.nlu.v1.IntentNode.prototype.setFormattedTextRange = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.clearFormattedTextRange = function() {
  return this.setFormattedTextRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.IntentNode.prototype.hasFormattedTextRange = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * map<string, google.protobuf.Any> metadata = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional AudioRange audio_range = 15;
 * @return {?proto.nuance.nlu.v1.AudioRange}
 */
proto.nuance.nlu.v1.IntentNode.prototype.getAudioRange = function() {
  return /** @type{?proto.nuance.nlu.v1.AudioRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.AudioRange, 15));
};


/**
 * @param {?proto.nuance.nlu.v1.AudioRange|undefined} value
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
*/
proto.nuance.nlu.v1.IntentNode.prototype.setAudioRange = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.IntentNode} returns this
 */
proto.nuance.nlu.v1.IntentNode.prototype.clearAudioRange = function() {
  return this.setAudioRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.IntentNode.prototype.hasAudioRange = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.nlu.v1.EntityNode.repeatedFields_ = [5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.nuance.nlu.v1.EntityNode.oneofGroups_ = [[6,7]];

/**
 * @enum {number}
 */
proto.nuance.nlu.v1.EntityNode.ValueUnionCase = {
  VALUE_UNION_NOT_SET: 0,
  STRING_VALUE: 6,
  STRUCT_VALUE: 7
};

/**
 * @return {proto.nuance.nlu.v1.EntityNode.ValueUnionCase}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getValueUnionCase = function() {
  return /** @type {proto.nuance.nlu.v1.EntityNode.ValueUnionCase} */(jspb.Message.computeOneofCase(this, proto.nuance.nlu.v1.EntityNode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.nlu.v1.EntityNode.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.nlu.v1.EntityNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.nlu.v1.EntityNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.EntityNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    textRange: (f = msg.getTextRange()) && nuance_nlu_v1_interpretation$common_pb.TextRange.toObject(includeInstance, f),
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    origin: jspb.Message.getFieldWithDefault(msg, 4, 0),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.nuance.nlu.v1.InterpretationNode.toObject, includeInstance),
    stringValue: jspb.Message.getFieldWithDefault(msg, 6, ""),
    structValue: (f = msg.getStructValue()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    literal: jspb.Message.getFieldWithDefault(msg, 8, ""),
    sensitive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    formattedLiteral: jspb.Message.getFieldWithDefault(msg, 11, ""),
    formattedTextRange: (f = msg.getFormattedTextRange()) && nuance_nlu_v1_interpretation$common_pb.TextRange.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    audioRange: (f = msg.getAudioRange()) && nuance_nlu_v1_interpretation$common_pb.AudioRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.nlu.v1.EntityNode}
 */
proto.nuance.nlu.v1.EntityNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.nlu.v1.EntityNode;
  return proto.nuance.nlu.v1.EntityNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.nlu.v1.EntityNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.nlu.v1.EntityNode}
 */
proto.nuance.nlu.v1.EntityNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new nuance_nlu_v1_interpretation$common_pb.TextRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.TextRange.deserializeBinaryFromReader);
      msg.setTextRange(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setConfidence(value);
      break;
    case 4:
      var value = /** @type {!proto.nuance.nlu.v1.EnumOrigin} */ (reader.readEnum());
      msg.setOrigin(value);
      break;
    case 5:
      var value = new proto.nuance.nlu.v1.InterpretationNode;
      reader.readMessage(value,proto.nuance.nlu.v1.InterpretationNode.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 7:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setStructValue(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLiteral(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSensitive(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormattedLiteral(value);
      break;
    case 12:
      var value = new nuance_nlu_v1_interpretation$common_pb.TextRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.TextRange.deserializeBinaryFromReader);
      msg.setFormattedTextRange(value);
      break;
    case 13:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 15:
      var value = new nuance_nlu_v1_interpretation$common_pb.AudioRange;
      reader.readMessage(value,nuance_nlu_v1_interpretation$common_pb.AudioRange.deserializeBinaryFromReader);
      msg.setAudioRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.nlu.v1.EntityNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.nlu.v1.EntityNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.nlu.v1.EntityNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.nlu.v1.EntityNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTextRange();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      nuance_nlu_v1_interpretation$common_pb.TextRange.serializeBinaryToWriter
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getOrigin();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.nuance.nlu.v1.InterpretationNode.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStructValue();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getLiteral();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSensitive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getFormattedLiteral();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFormattedTextRange();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      nuance_nlu_v1_interpretation$common_pb.TextRange.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getAudioRange();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      nuance_nlu_v1_interpretation$common_pb.AudioRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TextRange text_range = 2;
 * @return {?proto.nuance.nlu.v1.TextRange}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getTextRange = function() {
  return /** @type{?proto.nuance.nlu.v1.TextRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.TextRange, 2));
};


/**
 * @param {?proto.nuance.nlu.v1.TextRange|undefined} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
*/
proto.nuance.nlu.v1.EntityNode.prototype.setTextRange = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.clearTextRange = function() {
  return this.setTextRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.EntityNode.prototype.hasTextRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float confidence = 3;
 * @return {number}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional EnumOrigin origin = 4;
 * @return {!proto.nuance.nlu.v1.EnumOrigin}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getOrigin = function() {
  return /** @type {!proto.nuance.nlu.v1.EnumOrigin} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.nuance.nlu.v1.EnumOrigin} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.setOrigin = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated InterpretationNode children = 5;
 * @return {!Array<!proto.nuance.nlu.v1.InterpretationNode>}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.nuance.nlu.v1.InterpretationNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.nlu.v1.InterpretationNode, 5));
};


/**
 * @param {!Array<!proto.nuance.nlu.v1.InterpretationNode>} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
*/
proto.nuance.nlu.v1.EntityNode.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.nuance.nlu.v1.InterpretationNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.nlu.v1.InterpretationNode}
 */
proto.nuance.nlu.v1.EntityNode.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.nuance.nlu.v1.InterpretationNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


/**
 * optional string string_value = 6;
 * @return {string}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.nuance.nlu.v1.EntityNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 6, proto.nuance.nlu.v1.EntityNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.EntityNode.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Struct struct_value = 7;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getStructValue = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 7));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
*/
proto.nuance.nlu.v1.EntityNode.prototype.setStructValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.nuance.nlu.v1.EntityNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.clearStructValue = function() {
  return this.setStructValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.EntityNode.prototype.hasStructValue = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string literal = 8;
 * @return {string}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getLiteral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.setLiteral = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool sensitive = 9;
 * @return {boolean}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getSensitive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.setSensitive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string formatted_literal = 11;
 * @return {string}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getFormattedLiteral = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.setFormattedLiteral = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional TextRange formatted_text_range = 12;
 * @return {?proto.nuance.nlu.v1.TextRange}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getFormattedTextRange = function() {
  return /** @type{?proto.nuance.nlu.v1.TextRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.TextRange, 12));
};


/**
 * @param {?proto.nuance.nlu.v1.TextRange|undefined} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
*/
proto.nuance.nlu.v1.EntityNode.prototype.setFormattedTextRange = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.clearFormattedTextRange = function() {
  return this.setFormattedTextRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.EntityNode.prototype.hasFormattedTextRange = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * map<string, google.protobuf.Any> metadata = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional AudioRange audio_range = 15;
 * @return {?proto.nuance.nlu.v1.AudioRange}
 */
proto.nuance.nlu.v1.EntityNode.prototype.getAudioRange = function() {
  return /** @type{?proto.nuance.nlu.v1.AudioRange} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_interpretation$common_pb.AudioRange, 15));
};


/**
 * @param {?proto.nuance.nlu.v1.AudioRange|undefined} value
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
*/
proto.nuance.nlu.v1.EntityNode.prototype.setAudioRange = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.nlu.v1.EntityNode} returns this
 */
proto.nuance.nlu.v1.EntityNode.prototype.clearAudioRange = function() {
  return this.setAudioRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.nlu.v1.EntityNode.prototype.hasAudioRange = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * @enum {number}
 */
proto.nuance.nlu.v1.EnumOperator = {
  AND: 0,
  OR: 1,
  NOT: 2
};

goog.object.extend(exports, proto.nuance.nlu.v1);
