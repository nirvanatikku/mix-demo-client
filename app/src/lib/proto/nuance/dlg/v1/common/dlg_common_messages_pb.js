// source: nuance/dlg/v1/common/dlg_common_messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var nuance_nlu_v1_result_pb = require('../../../../nuance/nlu/v1/result_pb.js');
goog.object.extend(proto, nuance_nlu_v1_result_pb);
goog.exportSymbol('proto.nuance.dlg.v1.common.BackendConnectionSettings', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.ContinueAction', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.DAAction', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.DialogEvent', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.DialogEvent.EventType', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.EndAction', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.EscalationAction', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.ExecuteRequestPayload', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.ExecuteResponsePayload', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.ExecuteResponsePayload.ActionCase', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message.Audio', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message.Audio.AudiosrcCase', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message.Nlg', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message.TTSParameters', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message.TTSParameters.Voice', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.EnumGender', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Message.Visual', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.MessageSettings', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.QAAction', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.RecognitionSettings', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.RequestData', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.ResourceReference', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.ResourceReference.EnumResourceType', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Selectable', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Selectable.SelectableItem', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.Selector', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.StartRequestPayload', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.StartResponsePayload', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.UpdateRequestPayload', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.UserInput', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.UserInput.InputCase', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.UserInput.Interpretation', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.View', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.VxmlConfiguration', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.VxmlResourceReference', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.EnumResourceType', null, global);
goog.exportSymbol('proto.nuance.dlg.v1.common.VxmlResourceReference.ResourceUnionCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.StartRequestPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.StartRequestPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.StartRequestPayload.displayName = 'proto.nuance.dlg.v1.common.StartRequestPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.ResourceReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.ResourceReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.ResourceReference.displayName = 'proto.nuance.dlg.v1.common.ResourceReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.StartResponsePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.StartResponsePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.StartResponsePayload.displayName = 'proto.nuance.dlg.v1.common.StartResponsePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.UpdateRequestPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.UpdateRequestPayload.displayName = 'proto.nuance.dlg.v1.common.UpdateRequestPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.ExecuteRequestPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.ExecuteRequestPayload.displayName = 'proto.nuance.dlg.v1.common.ExecuteRequestPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.UserInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.nuance.dlg.v1.common.UserInput.oneofGroups_);
};
goog.inherits(proto.nuance.dlg.v1.common.UserInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.UserInput.displayName = 'proto.nuance.dlg.v1.common.UserInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.dlg.v1.common.UserInput.Interpretation.repeatedFields_, null);
};
goog.inherits(proto.nuance.dlg.v1.common.UserInput.Interpretation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.UserInput.Interpretation.displayName = 'proto.nuance.dlg.v1.common.UserInput.Interpretation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.RequestData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.RequestData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.RequestData.displayName = 'proto.nuance.dlg.v1.common.RequestData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.dlg.v1.common.ExecuteResponsePayload.repeatedFields_, proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_);
};
goog.inherits(proto.nuance.dlg.v1.common.ExecuteResponsePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.ExecuteResponsePayload.displayName = 'proto.nuance.dlg.v1.common.ExecuteResponsePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.dlg.v1.common.Message.repeatedFields_, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Message.displayName = 'proto.nuance.dlg.v1.common.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Message.Nlg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Message.Nlg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Message.Nlg.displayName = 'proto.nuance.dlg.v1.common.Message.Nlg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Message.Visual = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Message.Visual, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Message.Visual.displayName = 'proto.nuance.dlg.v1.common.Message.Visual';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Message.Audio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.nuance.dlg.v1.common.Message.Audio.oneofGroups_);
};
goog.inherits(proto.nuance.dlg.v1.common.Message.Audio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Message.Audio.displayName = 'proto.nuance.dlg.v1.common.Message.Audio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Message.TTSParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Message.TTSParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Message.TTSParameters.displayName = 'proto.nuance.dlg.v1.common.Message.TTSParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Message.TTSParameters.Voice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.displayName = 'proto.nuance.dlg.v1.common.Message.TTSParameters.Voice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.View = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.View, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.View.displayName = 'proto.nuance.dlg.v1.common.View';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Selectable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.dlg.v1.common.Selectable.repeatedFields_, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Selectable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Selectable.displayName = 'proto.nuance.dlg.v1.common.Selectable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Selectable.SelectableItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Selectable.SelectableItem.displayName = 'proto.nuance.dlg.v1.common.Selectable.SelectableItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.displayName = 'proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.RecognitionSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.dlg.v1.common.RecognitionSettings.repeatedFields_, null);
};
goog.inherits(proto.nuance.dlg.v1.common.RecognitionSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.RecognitionSettings.displayName = 'proto.nuance.dlg.v1.common.RecognitionSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.displayName = 'proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.displayName = 'proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.displayName = 'proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.displayName = 'proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.MessageSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.MessageSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.MessageSettings.displayName = 'proto.nuance.dlg.v1.common.MessageSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.QAAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.QAAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.QAAction.displayName = 'proto.nuance.dlg.v1.common.QAAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.BackendConnectionSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.BackendConnectionSettings.displayName = 'proto.nuance.dlg.v1.common.BackendConnectionSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.DAAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.DAAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.DAAction.displayName = 'proto.nuance.dlg.v1.common.DAAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.EscalationAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.EscalationAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.EscalationAction.displayName = 'proto.nuance.dlg.v1.common.EscalationAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.EndAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.EndAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.EndAction.displayName = 'proto.nuance.dlg.v1.common.EndAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.ContinueAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.ContinueAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.ContinueAction.displayName = 'proto.nuance.dlg.v1.common.ContinueAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.VxmlConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuance.dlg.v1.common.VxmlConfiguration.repeatedFields_, null);
};
goog.inherits(proto.nuance.dlg.v1.common.VxmlConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.VxmlConfiguration.displayName = 'proto.nuance.dlg.v1.common.VxmlConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.VxmlResourceReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.nuance.dlg.v1.common.VxmlResourceReference.oneofGroups_);
};
goog.inherits(proto.nuance.dlg.v1.common.VxmlResourceReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.VxmlResourceReference.displayName = 'proto.nuance.dlg.v1.common.VxmlResourceReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.displayName = 'proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.DialogEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.DialogEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.DialogEvent.displayName = 'proto.nuance.dlg.v1.common.DialogEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuance.dlg.v1.common.Selector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuance.dlg.v1.common.Selector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuance.dlg.v1.common.Selector.displayName = 'proto.nuance.dlg.v1.common.Selector';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.StartRequestPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.StartRequestPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.StartRequestPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelRef: (f = msg.getModelRef()) && proto.nuance.dlg.v1.common.ResourceReference.toObject(includeInstance, f),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    suppressLogUserData: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.StartRequestPayload}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.StartRequestPayload;
  return proto.nuance.dlg.v1.common.StartRequestPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.StartRequestPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.StartRequestPayload}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.ResourceReference;
      reader.readMessage(value,proto.nuance.dlg.v1.common.ResourceReference.deserializeBinaryFromReader);
      msg.setModelRef(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuppressLogUserData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.StartRequestPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.StartRequestPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.StartRequestPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelRef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.ResourceReference.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getSuppressLogUserData();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional ResourceReference model_ref = 1;
 * @return {?proto.nuance.dlg.v1.common.ResourceReference}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.getModelRef = function() {
  return /** @type{?proto.nuance.dlg.v1.common.ResourceReference} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.ResourceReference, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.ResourceReference|undefined} value
 * @return {!proto.nuance.dlg.v1.common.StartRequestPayload} returns this
*/
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.setModelRef = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.StartRequestPayload} returns this
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.clearModelRef = function() {
  return this.setModelRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.hasModelRef = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct data = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.StartRequestPayload} returns this
*/
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.StartRequestPayload} returns this
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool suppress_log_user_data = 3;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.getSuppressLogUserData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.StartRequestPayload} returns this
 */
proto.nuance.dlg.v1.common.StartRequestPayload.prototype.setSuppressLogUserData = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.ResourceReference.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.ResourceReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.ResourceReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ResourceReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.ResourceReference}
 */
proto.nuance.dlg.v1.common.ResourceReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.ResourceReference;
  return proto.nuance.dlg.v1.common.ResourceReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.ResourceReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.ResourceReference}
 */
proto.nuance.dlg.v1.common.ResourceReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 2:
      var value = /** @type {!proto.nuance.dlg.v1.common.ResourceReference.EnumResourceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.ResourceReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.ResourceReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.ResourceReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ResourceReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.ResourceReference.EnumResourceType = {
  APPLICATION_MODEL: 0
};

/**
 * optional string uri = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.ResourceReference.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.ResourceReference} returns this
 */
proto.nuance.dlg.v1.common.ResourceReference.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EnumResourceType type = 2;
 * @return {!proto.nuance.dlg.v1.common.ResourceReference.EnumResourceType}
 */
proto.nuance.dlg.v1.common.ResourceReference.prototype.getType = function() {
  return /** @type {!proto.nuance.dlg.v1.common.ResourceReference.EnumResourceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.nuance.dlg.v1.common.ResourceReference.EnumResourceType} value
 * @return {!proto.nuance.dlg.v1.common.ResourceReference} returns this
 */
proto.nuance.dlg.v1.common.ResourceReference.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.StartResponsePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.StartResponsePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.StartResponsePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.StartResponsePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.StartResponsePayload}
 */
proto.nuance.dlg.v1.common.StartResponsePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.StartResponsePayload;
  return proto.nuance.dlg.v1.common.StartResponsePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.StartResponsePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.StartResponsePayload}
 */
proto.nuance.dlg.v1.common.StartResponsePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.StartResponsePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.StartResponsePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.StartResponsePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.StartResponsePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.StartResponsePayload.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.StartResponsePayload} returns this
 */
proto.nuance.dlg.v1.common.StartResponsePayload.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.UpdateRequestPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.UpdateRequestPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.UpdateRequestPayload}
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.UpdateRequestPayload;
  return proto.nuance.dlg.v1.common.UpdateRequestPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.UpdateRequestPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.UpdateRequestPayload}
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.UpdateRequestPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.UpdateRequestPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct data = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.UpdateRequestPayload} returns this
*/
proto.nuance.dlg.v1.common.UpdateRequestPayload.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.UpdateRequestPayload} returns this
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.UpdateRequestPayload.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.ExecuteRequestPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    userInput: (f = msg.getUserInput()) && proto.nuance.dlg.v1.common.UserInput.toObject(includeInstance, f),
    dialogEvent: (f = msg.getDialogEvent()) && proto.nuance.dlg.v1.common.DialogEvent.toObject(includeInstance, f),
    requestedData: (f = msg.getRequestedData()) && proto.nuance.dlg.v1.common.RequestData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.ExecuteRequestPayload;
  return proto.nuance.dlg.v1.common.ExecuteRequestPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.UserInput;
      reader.readMessage(value,proto.nuance.dlg.v1.common.UserInput.deserializeBinaryFromReader);
      msg.setUserInput(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.DialogEvent;
      reader.readMessage(value,proto.nuance.dlg.v1.common.DialogEvent.deserializeBinaryFromReader);
      msg.setDialogEvent(value);
      break;
    case 3:
      var value = new proto.nuance.dlg.v1.common.RequestData;
      reader.readMessage(value,proto.nuance.dlg.v1.common.RequestData.deserializeBinaryFromReader);
      msg.setRequestedData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.ExecuteRequestPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserInput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.UserInput.serializeBinaryToWriter
    );
  }
  f = message.getDialogEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.DialogEvent.serializeBinaryToWriter
    );
  }
  f = message.getRequestedData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuance.dlg.v1.common.RequestData.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserInput user_input = 1;
 * @return {?proto.nuance.dlg.v1.common.UserInput}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.getUserInput = function() {
  return /** @type{?proto.nuance.dlg.v1.common.UserInput} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.UserInput, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.UserInput|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.setUserInput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.clearUserInput = function() {
  return this.setUserInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.hasUserInput = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DialogEvent dialog_event = 2;
 * @return {?proto.nuance.dlg.v1.common.DialogEvent}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.getDialogEvent = function() {
  return /** @type{?proto.nuance.dlg.v1.common.DialogEvent} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.DialogEvent, 2));
};


/**
 * @param {?proto.nuance.dlg.v1.common.DialogEvent|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.setDialogEvent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.clearDialogEvent = function() {
  return this.setDialogEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.hasDialogEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequestData requested_data = 3;
 * @return {?proto.nuance.dlg.v1.common.RequestData}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.getRequestedData = function() {
  return /** @type{?proto.nuance.dlg.v1.common.RequestData} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.RequestData, 3));
};


/**
 * @param {?proto.nuance.dlg.v1.common.RequestData|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.setRequestedData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteRequestPayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.clearRequestedData = function() {
  return this.setRequestedData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteRequestPayload.prototype.hasRequestedData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.nuance.dlg.v1.common.UserInput.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.UserInput.InputCase = {
  INPUT_NOT_SET: 0,
  USER_TEXT: 1,
  INTERPRETATION: 2,
  SELECTED_ITEM: 3,
  NLUAAS_INTERPRETATION: 4
};

/**
 * @return {proto.nuance.dlg.v1.common.UserInput.InputCase}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.getInputCase = function() {
  return /** @type {proto.nuance.dlg.v1.common.UserInput.InputCase} */(jspb.Message.computeOneofCase(this, proto.nuance.dlg.v1.common.UserInput.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.UserInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.UserInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.UserInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    userText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    interpretation: (f = msg.getInterpretation()) && proto.nuance.dlg.v1.common.UserInput.Interpretation.toObject(includeInstance, f),
    selectedItem: (f = msg.getSelectedItem()) && proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.toObject(includeInstance, f),
    nluaasInterpretation: (f = msg.getNluaasInterpretation()) && nuance_nlu_v1_result_pb.InterpretResult.toObject(includeInstance, f),
    inputMode: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.UserInput}
 */
proto.nuance.dlg.v1.common.UserInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.UserInput;
  return proto.nuance.dlg.v1.common.UserInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.UserInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.UserInput}
 */
proto.nuance.dlg.v1.common.UserInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserText(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.UserInput.Interpretation;
      reader.readMessage(value,proto.nuance.dlg.v1.common.UserInput.Interpretation.deserializeBinaryFromReader);
      msg.setInterpretation(value);
      break;
    case 3:
      var value = new proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.deserializeBinaryFromReader);
      msg.setSelectedItem(value);
      break;
    case 4:
      var value = new nuance_nlu_v1_result_pb.InterpretResult;
      reader.readMessage(value,nuance_nlu_v1_result_pb.InterpretResult.deserializeBinaryFromReader);
      msg.setNluaasInterpretation(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.UserInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.UserInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.UserInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterpretation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.UserInput.Interpretation.serializeBinaryToWriter
    );
  }
  f = message.getSelectedItem();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.serializeBinaryToWriter
    );
  }
  f = message.getNluaasInterpretation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      nuance_nlu_v1_result_pb.InterpretResult.serializeBinaryToWriter
    );
  }
  f = message.getInputMode();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.UserInput.Interpretation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.UserInput.Interpretation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.toObject = function(includeInstance, msg) {
  var f, obj = {
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    inputMode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    utterance: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
    slotLiteralsMap: (f = msg.getSlotLiteralsMap()) ? f.toObject(includeInstance, undefined) : [],
    slotFormattedLiteralsMap: (f = msg.getSlotFormattedLiteralsMap()) ? f.toObject(includeInstance, undefined) : [],
    alternativeInterpretationsList: jspb.Message.toObjectList(msg.getAlternativeInterpretationsList(),
    proto.nuance.dlg.v1.common.UserInput.Interpretation.toObject, includeInstance),
    slotConfidencesMap: (f = msg.getSlotConfidencesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.UserInput.Interpretation;
  return proto.nuance.dlg.v1.common.UserInput.Interpretation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.UserInput.Interpretation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setConfidence(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputMode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtterance(value);
      break;
    case 4:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = msg.getSlotLiteralsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = msg.getSlotFormattedLiteralsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = new proto.nuance.dlg.v1.common.UserInput.Interpretation;
      reader.readMessage(value,proto.nuance.dlg.v1.common.UserInput.Interpretation.deserializeBinaryFromReader);
      msg.addAlternativeInterpretations(value);
      break;
    case 7:
      var value = msg.getSlotConfidencesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readFloat, null, "", 0.0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.UserInput.Interpretation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.UserInput.Interpretation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getInputMode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUtterance();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSlotLiteralsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSlotFormattedLiteralsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAlternativeInterpretationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.nuance.dlg.v1.common.UserInput.Interpretation.serializeBinaryToWriter
    );
  }
  f = message.getSlotConfidencesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeFloat);
  }
};


/**
 * optional float confidence = 1;
 * @return {number}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string input_mode = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getInputMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.setInputMode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string utterance = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getUtterance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.setUtterance = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};


/**
 * map<string, string> slot_literals = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getSlotLiteralsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.clearSlotLiteralsMap = function() {
  this.getSlotLiteralsMap().clear();
  return this;};


/**
 * map<string, string> slot_formatted_literals = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getSlotFormattedLiteralsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.clearSlotFormattedLiteralsMap = function() {
  this.getSlotFormattedLiteralsMap().clear();
  return this;};


/**
 * repeated Interpretation alternative_interpretations = 6;
 * @return {!Array<!proto.nuance.dlg.v1.common.UserInput.Interpretation>}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getAlternativeInterpretationsList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.UserInput.Interpretation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.UserInput.Interpretation, 6));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.UserInput.Interpretation>} value
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
*/
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.setAlternativeInterpretationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.UserInput.Interpretation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.addAlternativeInterpretations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.nuance.dlg.v1.common.UserInput.Interpretation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.clearAlternativeInterpretationsList = function() {
  return this.setAlternativeInterpretationsList([]);
};


/**
 * map<string, float> slot_confidences = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.getSlotConfidencesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.dlg.v1.common.UserInput.Interpretation} returns this
 */
proto.nuance.dlg.v1.common.UserInput.Interpretation.prototype.clearSlotConfidencesMap = function() {
  this.getSlotConfidencesMap().clear();
  return this;};


/**
 * optional string user_text = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.getUserText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
 */
proto.nuance.dlg.v1.common.UserInput.prototype.setUserText = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.nuance.dlg.v1.common.UserInput.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
 */
proto.nuance.dlg.v1.common.UserInput.prototype.clearUserText = function() {
  return jspb.Message.setOneofField(this, 1, proto.nuance.dlg.v1.common.UserInput.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.hasUserText = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Interpretation interpretation = 2;
 * @return {?proto.nuance.dlg.v1.common.UserInput.Interpretation}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.getInterpretation = function() {
  return /** @type{?proto.nuance.dlg.v1.common.UserInput.Interpretation} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.UserInput.Interpretation, 2));
};


/**
 * @param {?proto.nuance.dlg.v1.common.UserInput.Interpretation|undefined} value
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
*/
proto.nuance.dlg.v1.common.UserInput.prototype.setInterpretation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.nuance.dlg.v1.common.UserInput.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
 */
proto.nuance.dlg.v1.common.UserInput.prototype.clearInterpretation = function() {
  return this.setInterpretation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.hasInterpretation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Selectable.SelectableItem.SelectedValue selected_item = 3;
 * @return {?proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.getSelectedItem = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue, 3));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue|undefined} value
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
*/
proto.nuance.dlg.v1.common.UserInput.prototype.setSelectedItem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.nuance.dlg.v1.common.UserInput.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
 */
proto.nuance.dlg.v1.common.UserInput.prototype.clearSelectedItem = function() {
  return this.setSelectedItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.hasSelectedItem = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional nuance.nlu.v1.InterpretResult nluaas_interpretation = 4;
 * @return {?proto.nuance.nlu.v1.InterpretResult}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.getNluaasInterpretation = function() {
  return /** @type{?proto.nuance.nlu.v1.InterpretResult} */ (
    jspb.Message.getWrapperField(this, nuance_nlu_v1_result_pb.InterpretResult, 4));
};


/**
 * @param {?proto.nuance.nlu.v1.InterpretResult|undefined} value
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
*/
proto.nuance.dlg.v1.common.UserInput.prototype.setNluaasInterpretation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.nuance.dlg.v1.common.UserInput.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
 */
proto.nuance.dlg.v1.common.UserInput.prototype.clearNluaasInterpretation = function() {
  return this.setNluaasInterpretation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.hasNluaasInterpretation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string input_mode = 20;
 * @return {string}
 */
proto.nuance.dlg.v1.common.UserInput.prototype.getInputMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.UserInput} returns this
 */
proto.nuance.dlg.v1.common.UserInput.prototype.setInputMode = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.RequestData.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.RequestData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.RequestData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RequestData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.RequestData}
 */
proto.nuance.dlg.v1.common.RequestData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.RequestData;
  return proto.nuance.dlg.v1.common.RequestData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.RequestData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.RequestData}
 */
proto.nuance.dlg.v1.common.RequestData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.RequestData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.RequestData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.RequestData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RequestData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RequestData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RequestData} returns this
 */
proto.nuance.dlg.v1.common.RequestData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct data = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.RequestData.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.RequestData} returns this
*/
proto.nuance.dlg.v1.common.RequestData.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.RequestData} returns this
 */
proto.nuance.dlg.v1.common.RequestData.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.RequestData.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_ = [[2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.ActionCase = {
  ACTION_NOT_SET: 0,
  QA_ACTION: 2,
  DA_ACTION: 3,
  ESCALATION_ACTION: 4,
  END_ACTION: 5,
  CONTINUE_ACTION: 6
};

/**
 * @return {proto.nuance.dlg.v1.common.ExecuteResponsePayload.ActionCase}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.getActionCase = function() {
  return /** @type {proto.nuance.dlg.v1.common.ExecuteResponsePayload.ActionCase} */(jspb.Message.computeOneofCase(this, proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.ExecuteResponsePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    proto.nuance.dlg.v1.common.Message.toObject, includeInstance),
    qaAction: (f = msg.getQaAction()) && proto.nuance.dlg.v1.common.QAAction.toObject(includeInstance, f),
    daAction: (f = msg.getDaAction()) && proto.nuance.dlg.v1.common.DAAction.toObject(includeInstance, f),
    escalationAction: (f = msg.getEscalationAction()) && proto.nuance.dlg.v1.common.EscalationAction.toObject(includeInstance, f),
    endAction: (f = msg.getEndAction()) && proto.nuance.dlg.v1.common.EndAction.toObject(includeInstance, f),
    continueAction: (f = msg.getContinueAction()) && proto.nuance.dlg.v1.common.ContinueAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.ExecuteResponsePayload;
  return proto.nuance.dlg.v1.common.ExecuteResponsePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Message;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.QAAction;
      reader.readMessage(value,proto.nuance.dlg.v1.common.QAAction.deserializeBinaryFromReader);
      msg.setQaAction(value);
      break;
    case 3:
      var value = new proto.nuance.dlg.v1.common.DAAction;
      reader.readMessage(value,proto.nuance.dlg.v1.common.DAAction.deserializeBinaryFromReader);
      msg.setDaAction(value);
      break;
    case 4:
      var value = new proto.nuance.dlg.v1.common.EscalationAction;
      reader.readMessage(value,proto.nuance.dlg.v1.common.EscalationAction.deserializeBinaryFromReader);
      msg.setEscalationAction(value);
      break;
    case 5:
      var value = new proto.nuance.dlg.v1.common.EndAction;
      reader.readMessage(value,proto.nuance.dlg.v1.common.EndAction.deserializeBinaryFromReader);
      msg.setEndAction(value);
      break;
    case 6:
      var value = new proto.nuance.dlg.v1.common.ContinueAction;
      reader.readMessage(value,proto.nuance.dlg.v1.common.ContinueAction.deserializeBinaryFromReader);
      msg.setContinueAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.ExecuteResponsePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Message.serializeBinaryToWriter
    );
  }
  f = message.getQaAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.QAAction.serializeBinaryToWriter
    );
  }
  f = message.getDaAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuance.dlg.v1.common.DAAction.serializeBinaryToWriter
    );
  }
  f = message.getEscalationAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nuance.dlg.v1.common.EscalationAction.serializeBinaryToWriter
    );
  }
  f = message.getEndAction();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.nuance.dlg.v1.common.EndAction.serializeBinaryToWriter
    );
  }
  f = message.getContinueAction();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.nuance.dlg.v1.common.ContinueAction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Message messages = 1;
 * @return {!Array<!proto.nuance.dlg.v1.common.Message>}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.Message, 1));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.Message>} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.Message}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuance.dlg.v1.common.Message, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * optional QAAction qa_action = 2;
 * @return {?proto.nuance.dlg.v1.common.QAAction}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.getQaAction = function() {
  return /** @type{?proto.nuance.dlg.v1.common.QAAction} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.QAAction, 2));
};


/**
 * @param {?proto.nuance.dlg.v1.common.QAAction|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.setQaAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.clearQaAction = function() {
  return this.setQaAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.hasQaAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DAAction da_action = 3;
 * @return {?proto.nuance.dlg.v1.common.DAAction}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.getDaAction = function() {
  return /** @type{?proto.nuance.dlg.v1.common.DAAction} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.DAAction, 3));
};


/**
 * @param {?proto.nuance.dlg.v1.common.DAAction|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.setDaAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.clearDaAction = function() {
  return this.setDaAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.hasDaAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EscalationAction escalation_action = 4;
 * @return {?proto.nuance.dlg.v1.common.EscalationAction}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.getEscalationAction = function() {
  return /** @type{?proto.nuance.dlg.v1.common.EscalationAction} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.EscalationAction, 4));
};


/**
 * @param {?proto.nuance.dlg.v1.common.EscalationAction|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.setEscalationAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.clearEscalationAction = function() {
  return this.setEscalationAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.hasEscalationAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EndAction end_action = 5;
 * @return {?proto.nuance.dlg.v1.common.EndAction}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.getEndAction = function() {
  return /** @type{?proto.nuance.dlg.v1.common.EndAction} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.EndAction, 5));
};


/**
 * @param {?proto.nuance.dlg.v1.common.EndAction|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.setEndAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.clearEndAction = function() {
  return this.setEndAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.hasEndAction = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ContinueAction continue_action = 6;
 * @return {?proto.nuance.dlg.v1.common.ContinueAction}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.getContinueAction = function() {
  return /** @type{?proto.nuance.dlg.v1.common.ContinueAction} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.ContinueAction, 6));
};


/**
 * @param {?proto.nuance.dlg.v1.common.ContinueAction|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
*/
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.setContinueAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.nuance.dlg.v1.common.ExecuteResponsePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ExecuteResponsePayload} returns this
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.clearContinueAction = function() {
  return this.setContinueAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ExecuteResponsePayload.prototype.hasContinueAction = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.dlg.v1.common.Message.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    nlgList: jspb.Message.toObjectList(msg.getNlgList(),
    proto.nuance.dlg.v1.common.Message.Nlg.toObject, includeInstance),
    visualList: jspb.Message.toObjectList(msg.getVisualList(),
    proto.nuance.dlg.v1.common.Message.Visual.toObject, includeInstance),
    audioList: jspb.Message.toObjectList(msg.getAudioList(),
    proto.nuance.dlg.v1.common.Message.Audio.toObject, includeInstance),
    view: (f = msg.getView()) && proto.nuance.dlg.v1.common.View.toObject(includeInstance, f),
    language: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ttsParameters: (f = msg.getTtsParameters()) && proto.nuance.dlg.v1.common.Message.TTSParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Message}
 */
proto.nuance.dlg.v1.common.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Message;
  return proto.nuance.dlg.v1.common.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Message}
 */
proto.nuance.dlg.v1.common.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Message.Nlg;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.Nlg.deserializeBinaryFromReader);
      msg.addNlg(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.Message.Visual;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.Visual.deserializeBinaryFromReader);
      msg.addVisual(value);
      break;
    case 3:
      var value = new proto.nuance.dlg.v1.common.Message.Audio;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.Audio.deserializeBinaryFromReader);
      msg.addAudio(value);
      break;
    case 4:
      var value = new proto.nuance.dlg.v1.common.View;
      reader.readMessage(value,proto.nuance.dlg.v1.common.View.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 6:
      var value = new proto.nuance.dlg.v1.common.Message.TTSParameters;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.TTSParameters.deserializeBinaryFromReader);
      msg.setTtsParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNlgList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Message.Nlg.serializeBinaryToWriter
    );
  }
  f = message.getVisualList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.Message.Visual.serializeBinaryToWriter
    );
  }
  f = message.getAudioList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.nuance.dlg.v1.common.Message.Audio.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nuance.dlg.v1.common.View.serializeBinaryToWriter
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTtsParameters();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.nuance.dlg.v1.common.Message.TTSParameters.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Message.Nlg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Message.Nlg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.Nlg.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mask: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    bargeInDisabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Message.Nlg}
 */
proto.nuance.dlg.v1.common.Message.Nlg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Message.Nlg;
  return proto.nuance.dlg.v1.common.Message.Nlg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Message.Nlg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Message.Nlg}
 */
proto.nuance.dlg.v1.common.Message.Nlg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMask(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBargeInDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Message.Nlg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Message.Nlg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.Nlg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMask();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getBargeInDisabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message.Nlg} returns this
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool mask = 2;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.getMask = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.Message.Nlg} returns this
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.setMask = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool barge_in_disabled = 3;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.getBargeInDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.Message.Nlg} returns this
 */
proto.nuance.dlg.v1.common.Message.Nlg.prototype.setBargeInDisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Message.Visual.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Message.Visual} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.Visual.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mask: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    bargeInDisabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Message.Visual}
 */
proto.nuance.dlg.v1.common.Message.Visual.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Message.Visual;
  return proto.nuance.dlg.v1.common.Message.Visual.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Message.Visual} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Message.Visual}
 */
proto.nuance.dlg.v1.common.Message.Visual.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMask(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBargeInDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Message.Visual.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Message.Visual} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.Visual.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMask();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getBargeInDisabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message.Visual} returns this
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool mask = 2;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.getMask = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.Message.Visual} returns this
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.setMask = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool barge_in_disabled = 3;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.getBargeInDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.Message.Visual} returns this
 */
proto.nuance.dlg.v1.common.Message.Visual.prototype.setBargeInDisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.nuance.dlg.v1.common.Message.Audio.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.Message.Audio.AudiosrcCase = {
  AUDIOSRC_NOT_SET: 0,
  URI: 2
};

/**
 * @return {proto.nuance.dlg.v1.common.Message.Audio.AudiosrcCase}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.getAudiosrcCase = function() {
  return /** @type {proto.nuance.dlg.v1.common.Message.Audio.AudiosrcCase} */(jspb.Message.computeOneofCase(this, proto.nuance.dlg.v1.common.Message.Audio.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Message.Audio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Message.Audio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.Audio.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mask: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bargeInDisabled: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Message.Audio}
 */
proto.nuance.dlg.v1.common.Message.Audio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Message.Audio;
  return proto.nuance.dlg.v1.common.Message.Audio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Message.Audio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Message.Audio}
 */
proto.nuance.dlg.v1.common.Message.Audio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMask(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBargeInDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Message.Audio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Message.Audio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.Audio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMask();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBargeInDisabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message.Audio} returns this
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uri = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message.Audio} returns this
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.setUri = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.nuance.dlg.v1.common.Message.Audio.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.Message.Audio} returns this
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.clearUri = function() {
  return jspb.Message.setOneofField(this, 2, proto.nuance.dlg.v1.common.Message.Audio.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.hasUri = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool mask = 3;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.getMask = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.Message.Audio} returns this
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.setMask = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool barge_in_disabled = 4;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.getBargeInDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.Message.Audio} returns this
 */
proto.nuance.dlg.v1.common.Message.Audio.prototype.setBargeInDisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Message.TTSParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Message.TTSParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    voice: (f = msg.getVoice()) && proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Message.TTSParameters;
  return proto.nuance.dlg.v1.common.Message.TTSParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Message.TTSParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Message.TTSParameters.Voice;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.deserializeBinaryFromReader);
      msg.setVoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Message.TTSParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Message.TTSParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoice();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 3, 0),
    language: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Message.TTSParameters.Voice;
  return proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.EnumGender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.EnumGender = {
  ANY: 0,
  MALE: 1,
  FEMALE: 2,
  NEUTRAL: 3
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} returns this
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} returns this
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EnumGender gender = 3;
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.EnumGender}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.getGender = function() {
  return /** @type {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.EnumGender} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.EnumGender} value
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} returns this
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string language = 4;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} returns this
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.Voice.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Voice voice = 1;
 * @return {?proto.nuance.dlg.v1.common.Message.TTSParameters.Voice}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.prototype.getVoice = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Message.TTSParameters.Voice} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Message.TTSParameters.Voice, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Message.TTSParameters.Voice|undefined} value
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters} returns this
*/
proto.nuance.dlg.v1.common.Message.TTSParameters.prototype.setVoice = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.Message.TTSParameters} returns this
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.prototype.clearVoice = function() {
  return this.setVoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.TTSParameters.prototype.hasVoice = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Nlg nlg = 1;
 * @return {!Array<!proto.nuance.dlg.v1.common.Message.Nlg>}
 */
proto.nuance.dlg.v1.common.Message.prototype.getNlgList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.Message.Nlg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.Message.Nlg, 1));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.Message.Nlg>} value
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
*/
proto.nuance.dlg.v1.common.Message.prototype.setNlgList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.Message.Nlg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.Message.Nlg}
 */
proto.nuance.dlg.v1.common.Message.prototype.addNlg = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuance.dlg.v1.common.Message.Nlg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
 */
proto.nuance.dlg.v1.common.Message.prototype.clearNlgList = function() {
  return this.setNlgList([]);
};


/**
 * repeated Visual visual = 2;
 * @return {!Array<!proto.nuance.dlg.v1.common.Message.Visual>}
 */
proto.nuance.dlg.v1.common.Message.prototype.getVisualList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.Message.Visual>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.Message.Visual, 2));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.Message.Visual>} value
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
*/
proto.nuance.dlg.v1.common.Message.prototype.setVisualList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.Message.Visual=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.Message.Visual}
 */
proto.nuance.dlg.v1.common.Message.prototype.addVisual = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nuance.dlg.v1.common.Message.Visual, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
 */
proto.nuance.dlg.v1.common.Message.prototype.clearVisualList = function() {
  return this.setVisualList([]);
};


/**
 * repeated Audio audio = 3;
 * @return {!Array<!proto.nuance.dlg.v1.common.Message.Audio>}
 */
proto.nuance.dlg.v1.common.Message.prototype.getAudioList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.Message.Audio>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.Message.Audio, 3));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.Message.Audio>} value
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
*/
proto.nuance.dlg.v1.common.Message.prototype.setAudioList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.Message.Audio=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.Message.Audio}
 */
proto.nuance.dlg.v1.common.Message.prototype.addAudio = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.nuance.dlg.v1.common.Message.Audio, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
 */
proto.nuance.dlg.v1.common.Message.prototype.clearAudioList = function() {
  return this.setAudioList([]);
};


/**
 * optional View view = 4;
 * @return {?proto.nuance.dlg.v1.common.View}
 */
proto.nuance.dlg.v1.common.Message.prototype.getView = function() {
  return /** @type{?proto.nuance.dlg.v1.common.View} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.View, 4));
};


/**
 * @param {?proto.nuance.dlg.v1.common.View|undefined} value
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
*/
proto.nuance.dlg.v1.common.Message.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
 */
proto.nuance.dlg.v1.common.Message.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.prototype.hasView = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string language = 5;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Message.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
 */
proto.nuance.dlg.v1.common.Message.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional TTSParameters tts_parameters = 6;
 * @return {?proto.nuance.dlg.v1.common.Message.TTSParameters}
 */
proto.nuance.dlg.v1.common.Message.prototype.getTtsParameters = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Message.TTSParameters} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Message.TTSParameters, 6));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Message.TTSParameters|undefined} value
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
*/
proto.nuance.dlg.v1.common.Message.prototype.setTtsParameters = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.Message} returns this
 */
proto.nuance.dlg.v1.common.Message.prototype.clearTtsParameters = function() {
  return this.setTtsParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Message.prototype.hasTtsParameters = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.View.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.View.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.View} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.View.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.View}
 */
proto.nuance.dlg.v1.common.View.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.View;
  return proto.nuance.dlg.v1.common.View.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.View} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.View}
 */
proto.nuance.dlg.v1.common.View.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.View.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.View.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.View} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.View.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.View.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.View} returns this
 */
proto.nuance.dlg.v1.common.View.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.View.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.View} returns this
 */
proto.nuance.dlg.v1.common.View.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.dlg.v1.common.Selectable.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Selectable.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Selectable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Selectable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selectable.toObject = function(includeInstance, msg) {
  var f, obj = {
    selectableItemsList: jspb.Message.toObjectList(msg.getSelectableItemsList(),
    proto.nuance.dlg.v1.common.Selectable.SelectableItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Selectable}
 */
proto.nuance.dlg.v1.common.Selectable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Selectable;
  return proto.nuance.dlg.v1.common.Selectable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Selectable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Selectable}
 */
proto.nuance.dlg.v1.common.Selectable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Selectable.SelectableItem;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Selectable.SelectableItem.deserializeBinaryFromReader);
      msg.addSelectableItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Selectable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Selectable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Selectable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selectable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectableItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Selectable.SelectableItem.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Selectable.SelectableItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayText: jspb.Message.getFieldWithDefault(msg, 3, ""),
    displayImageUri: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Selectable.SelectableItem;
  return proto.nuance.dlg.v1.common.Selectable.SelectableItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayText(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayImageUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Selectable.SelectableItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDisplayImageUri();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue;
  return proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue} returns this
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue} returns this
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SelectedValue value = 1;
 * @return {?proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.getValue = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Selectable.SelectableItem.SelectedValue|undefined} value
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} returns this
*/
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} returns this
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} returns this
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_text = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.getDisplayText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} returns this
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.setDisplayText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string display_image_uri = 4;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.getDisplayImageUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem} returns this
 */
proto.nuance.dlg.v1.common.Selectable.SelectableItem.prototype.setDisplayImageUri = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated SelectableItem selectable_items = 1;
 * @return {!Array<!proto.nuance.dlg.v1.common.Selectable.SelectableItem>}
 */
proto.nuance.dlg.v1.common.Selectable.prototype.getSelectableItemsList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.Selectable.SelectableItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.Selectable.SelectableItem, 1));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.Selectable.SelectableItem>} value
 * @return {!proto.nuance.dlg.v1.common.Selectable} returns this
*/
proto.nuance.dlg.v1.common.Selectable.prototype.setSelectableItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.Selectable.SelectableItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.Selectable.SelectableItem}
 */
proto.nuance.dlg.v1.common.Selectable.prototype.addSelectableItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuance.dlg.v1.common.Selectable.SelectableItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.Selectable} returns this
 */
proto.nuance.dlg.v1.common.Selectable.prototype.clearSelectableItemsList = function() {
  return this.setSelectableItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.dlg.v1.common.RecognitionSettings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.RecognitionSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    dtmfMappingsList: jspb.Message.toObjectList(msg.getDtmfMappingsList(),
    proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.toObject, includeInstance),
    collectionSettings: (f = msg.getCollectionSettings()) && proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.toObject(includeInstance, f),
    speechSettings: (f = msg.getSpeechSettings()) && proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.toObject(includeInstance, f),
    dtmfSettings: (f = msg.getDtmfSettings()) && proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.RecognitionSettings;
  return proto.nuance.dlg.v1.common.RecognitionSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping;
      reader.readMessage(value,proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.deserializeBinaryFromReader);
      msg.addDtmfMappings(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings;
      reader.readMessage(value,proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.deserializeBinaryFromReader);
      msg.setCollectionSettings(value);
      break;
    case 3:
      var value = new proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings;
      reader.readMessage(value,proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.deserializeBinaryFromReader);
      msg.setSpeechSettings(value);
      break;
    case 4:
      var value = new proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings;
      reader.readMessage(value,proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.deserializeBinaryFromReader);
      msg.setDtmfSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.RecognitionSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDtmfMappingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.serializeBinaryToWriter
    );
  }
  f = message.getCollectionSettings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.serializeBinaryToWriter
    );
  }
  f = message.getSpeechSettings();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.serializeBinaryToWriter
    );
  }
  f = message.getDtmfSettings();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dtmfKey: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping;
  return proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDtmfKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDtmfKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dtmf_key = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.getDtmfKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping.prototype.setDtmfKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeout: jspb.Message.getFieldWithDefault(msg, 1, ""),
    completeTimeout: jspb.Message.getFieldWithDefault(msg, 2, ""),
    incompleteTimeout: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maxSpeechTimeout: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings;
  return proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeout(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompleteTimeout(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIncompleteTimeout(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxSpeechTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeout();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompleteTimeout();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIncompleteTimeout();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMaxSpeechTimeout();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string timeout = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.getTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string complete_timeout = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.getCompleteTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.setCompleteTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string incomplete_timeout = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.getIncompleteTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.setIncompleteTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string max_speech_timeout = 4;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.getMaxSpeechTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings.prototype.setMaxSpeechTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    sensitivity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bargeInType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    speedVsAccuracy: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings;
  return proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSensitivity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBargeInType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpeedVsAccuracy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSensitivity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBargeInType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpeedVsAccuracy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sensitivity = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.getSensitivity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.setSensitivity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string barge_in_type = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.getBargeInType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.setBargeInType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string speed_vs_accuracy = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.getSpeedVsAccuracy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings.prototype.setSpeedVsAccuracy = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    interDigitTimeout: jspb.Message.getFieldWithDefault(msg, 1, ""),
    termTimeout: jspb.Message.getFieldWithDefault(msg, 2, ""),
    termChar: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings;
  return proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterDigitTimeout(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTermTimeout(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTermChar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterDigitTimeout();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTermTimeout();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTermChar();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string inter_digit_timeout = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.getInterDigitTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.setInterDigitTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string term_timeout = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.getTermTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.setTermTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string term_char = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.getTermChar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings.prototype.setTermChar = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated DtmfMapping dtmf_mappings = 1;
 * @return {!Array<!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping>}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.getDtmfMappingsList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping, 1));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping>} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
*/
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.setDtmfMappingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.addDtmfMappings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuance.dlg.v1.common.RecognitionSettings.DtmfMapping, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.clearDtmfMappingsList = function() {
  return this.setDtmfMappingsList([]);
};


/**
 * optional CollectionSettings collection_settings = 2;
 * @return {?proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.getCollectionSettings = function() {
  return /** @type{?proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings, 2));
};


/**
 * @param {?proto.nuance.dlg.v1.common.RecognitionSettings.CollectionSettings|undefined} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
*/
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.setCollectionSettings = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.clearCollectionSettings = function() {
  return this.setCollectionSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.hasCollectionSettings = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SpeechSettings speech_settings = 3;
 * @return {?proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.getSpeechSettings = function() {
  return /** @type{?proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings, 3));
};


/**
 * @param {?proto.nuance.dlg.v1.common.RecognitionSettings.SpeechSettings|undefined} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
*/
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.setSpeechSettings = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.clearSpeechSettings = function() {
  return this.setSpeechSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.hasSpeechSettings = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DtmfSettings dtmf_settings = 4;
 * @return {?proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.getDtmfSettings = function() {
  return /** @type{?proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings, 4));
};


/**
 * @param {?proto.nuance.dlg.v1.common.RecognitionSettings.DtmfSettings|undefined} value
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
*/
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.setDtmfSettings = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.RecognitionSettings} returns this
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.clearDtmfSettings = function() {
  return this.setDtmfSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.RecognitionSettings.prototype.hasDtmfSettings = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.MessageSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.MessageSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.MessageSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.MessageSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    delay: jspb.Message.getFieldWithDefault(msg, 1, ""),
    minimum: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.MessageSettings}
 */
proto.nuance.dlg.v1.common.MessageSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.MessageSettings;
  return proto.nuance.dlg.v1.common.MessageSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.MessageSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.MessageSettings}
 */
proto.nuance.dlg.v1.common.MessageSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelay(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinimum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.MessageSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.MessageSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.MessageSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.MessageSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelay();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMinimum();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string delay = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.MessageSettings.prototype.getDelay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.MessageSettings} returns this
 */
proto.nuance.dlg.v1.common.MessageSettings.prototype.setDelay = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string minimum = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.MessageSettings.prototype.getMinimum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.MessageSettings} returns this
 */
proto.nuance.dlg.v1.common.MessageSettings.prototype.setMinimum = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.QAAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.QAAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.QAAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && proto.nuance.dlg.v1.common.Message.toObject(includeInstance, f),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.nuance.dlg.v1.common.View.toObject(includeInstance, f),
    selectable: (f = msg.getSelectable()) && proto.nuance.dlg.v1.common.Selectable.toObject(includeInstance, f),
    recognitionSettings: (f = msg.getRecognitionSettings()) && proto.nuance.dlg.v1.common.RecognitionSettings.toObject(includeInstance, f),
    mask: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.QAAction}
 */
proto.nuance.dlg.v1.common.QAAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.QAAction;
  return proto.nuance.dlg.v1.common.QAAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.QAAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.QAAction}
 */
proto.nuance.dlg.v1.common.QAAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Message;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = new proto.nuance.dlg.v1.common.View;
      reader.readMessage(value,proto.nuance.dlg.v1.common.View.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 4:
      var value = new proto.nuance.dlg.v1.common.Selectable;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Selectable.deserializeBinaryFromReader);
      msg.setSelectable(value);
      break;
    case 5:
      var value = new proto.nuance.dlg.v1.common.RecognitionSettings;
      reader.readMessage(value,proto.nuance.dlg.v1.common.RecognitionSettings.deserializeBinaryFromReader);
      msg.setRecognitionSettings(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.QAAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.QAAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.QAAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Message.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuance.dlg.v1.common.View.serializeBinaryToWriter
    );
  }
  f = message.getSelectable();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nuance.dlg.v1.common.Selectable.serializeBinaryToWriter
    );
  }
  f = message.getRecognitionSettings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.nuance.dlg.v1.common.RecognitionSettings.serializeBinaryToWriter
    );
  }
  f = message.getMask();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional Message message = 1;
 * @return {?proto.nuance.dlg.v1.common.Message}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.getMessage = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Message} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Message, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Message|undefined} value
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
*/
proto.nuance.dlg.v1.common.QAAction.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
 */
proto.nuance.dlg.v1.common.QAAction.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct data = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
*/
proto.nuance.dlg.v1.common.QAAction.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
 */
proto.nuance.dlg.v1.common.QAAction.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional View view = 3;
 * @return {?proto.nuance.dlg.v1.common.View}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.getView = function() {
  return /** @type{?proto.nuance.dlg.v1.common.View} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.View, 3));
};


/**
 * @param {?proto.nuance.dlg.v1.common.View|undefined} value
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
*/
proto.nuance.dlg.v1.common.QAAction.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
 */
proto.nuance.dlg.v1.common.QAAction.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.hasView = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Selectable selectable = 4;
 * @return {?proto.nuance.dlg.v1.common.Selectable}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.getSelectable = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Selectable} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Selectable, 4));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Selectable|undefined} value
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
*/
proto.nuance.dlg.v1.common.QAAction.prototype.setSelectable = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
 */
proto.nuance.dlg.v1.common.QAAction.prototype.clearSelectable = function() {
  return this.setSelectable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.hasSelectable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RecognitionSettings recognition_settings = 5;
 * @return {?proto.nuance.dlg.v1.common.RecognitionSettings}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.getRecognitionSettings = function() {
  return /** @type{?proto.nuance.dlg.v1.common.RecognitionSettings} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.RecognitionSettings, 5));
};


/**
 * @param {?proto.nuance.dlg.v1.common.RecognitionSettings|undefined} value
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
*/
proto.nuance.dlg.v1.common.QAAction.prototype.setRecognitionSettings = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
 */
proto.nuance.dlg.v1.common.QAAction.prototype.clearRecognitionSettings = function() {
  return this.setRecognitionSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.hasRecognitionSettings = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool mask = 6;
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.QAAction.prototype.getMask = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuance.dlg.v1.common.QAAction} returns this
 */
proto.nuance.dlg.v1.common.QAAction.prototype.setMask = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.BackendConnectionSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.BackendConnectionSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    fetchTimeout: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectTimeout: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.BackendConnectionSettings}
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.BackendConnectionSettings;
  return proto.nuance.dlg.v1.common.BackendConnectionSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.BackendConnectionSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.BackendConnectionSettings}
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFetchTimeout(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.BackendConnectionSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.BackendConnectionSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFetchTimeout();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectTimeout();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string fetch_timeout = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.prototype.getFetchTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.BackendConnectionSettings} returns this
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.prototype.setFetchTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string connect_timeout = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.prototype.getConnectTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.BackendConnectionSettings} returns this
 */
proto.nuance.dlg.v1.common.BackendConnectionSettings.prototype.setConnectTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.DAAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.DAAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.DAAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: (f = msg.getMessage()) && proto.nuance.dlg.v1.common.Message.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.nuance.dlg.v1.common.View.toObject(includeInstance, f),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    messageSettings: (f = msg.getMessageSettings()) && proto.nuance.dlg.v1.common.MessageSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.DAAction}
 */
proto.nuance.dlg.v1.common.DAAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.DAAction;
  return proto.nuance.dlg.v1.common.DAAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.DAAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.DAAction}
 */
proto.nuance.dlg.v1.common.DAAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.Message;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.nuance.dlg.v1.common.View;
      reader.readMessage(value,proto.nuance.dlg.v1.common.View.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 5:
      var value = new proto.nuance.dlg.v1.common.MessageSettings;
      reader.readMessage(value,proto.nuance.dlg.v1.common.MessageSettings.deserializeBinaryFromReader);
      msg.setMessageSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.DAAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.DAAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.DAAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.Message.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuance.dlg.v1.common.View.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getMessageSettings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.nuance.dlg.v1.common.MessageSettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
 */
proto.nuance.dlg.v1.common.DAAction.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Message message = 2;
 * @return {?proto.nuance.dlg.v1.common.Message}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.getMessage = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Message} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Message, 2));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Message|undefined} value
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
*/
proto.nuance.dlg.v1.common.DAAction.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
 */
proto.nuance.dlg.v1.common.DAAction.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional View view = 3;
 * @return {?proto.nuance.dlg.v1.common.View}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.getView = function() {
  return /** @type{?proto.nuance.dlg.v1.common.View} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.View, 3));
};


/**
 * @param {?proto.nuance.dlg.v1.common.View|undefined} value
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
*/
proto.nuance.dlg.v1.common.DAAction.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
 */
proto.nuance.dlg.v1.common.DAAction.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.hasView = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Struct data = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
*/
proto.nuance.dlg.v1.common.DAAction.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
 */
proto.nuance.dlg.v1.common.DAAction.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.hasData = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MessageSettings message_settings = 5;
 * @return {?proto.nuance.dlg.v1.common.MessageSettings}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.getMessageSettings = function() {
  return /** @type{?proto.nuance.dlg.v1.common.MessageSettings} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.MessageSettings, 5));
};


/**
 * @param {?proto.nuance.dlg.v1.common.MessageSettings|undefined} value
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
*/
proto.nuance.dlg.v1.common.DAAction.prototype.setMessageSettings = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.DAAction} returns this
 */
proto.nuance.dlg.v1.common.DAAction.prototype.clearMessageSettings = function() {
  return this.setMessageSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.DAAction.prototype.hasMessageSettings = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.EscalationAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.EscalationAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.EscalationAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && proto.nuance.dlg.v1.common.Message.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.nuance.dlg.v1.common.View.toObject(includeInstance, f),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.EscalationAction}
 */
proto.nuance.dlg.v1.common.EscalationAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.EscalationAction;
  return proto.nuance.dlg.v1.common.EscalationAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.EscalationAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.EscalationAction}
 */
proto.nuance.dlg.v1.common.EscalationAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Message;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.View;
      reader.readMessage(value,proto.nuance.dlg.v1.common.View.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.EscalationAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.EscalationAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.EscalationAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Message.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.View.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Message message = 1;
 * @return {?proto.nuance.dlg.v1.common.Message}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.getMessage = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Message} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Message, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Message|undefined} value
 * @return {!proto.nuance.dlg.v1.common.EscalationAction} returns this
*/
proto.nuance.dlg.v1.common.EscalationAction.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.EscalationAction} returns this
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional View view = 2;
 * @return {?proto.nuance.dlg.v1.common.View}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.getView = function() {
  return /** @type{?proto.nuance.dlg.v1.common.View} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.View, 2));
};


/**
 * @param {?proto.nuance.dlg.v1.common.View|undefined} value
 * @return {!proto.nuance.dlg.v1.common.EscalationAction} returns this
*/
proto.nuance.dlg.v1.common.EscalationAction.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.EscalationAction} returns this
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.hasView = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct data = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.EscalationAction} returns this
*/
proto.nuance.dlg.v1.common.EscalationAction.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.EscalationAction} returns this
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string id = 4;
 * @return {string}
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.EscalationAction} returns this
 */
proto.nuance.dlg.v1.common.EscalationAction.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.EndAction.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.EndAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.EndAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.EndAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.EndAction}
 */
proto.nuance.dlg.v1.common.EndAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.EndAction;
  return proto.nuance.dlg.v1.common.EndAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.EndAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.EndAction}
 */
proto.nuance.dlg.v1.common.EndAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.EndAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.EndAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.EndAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.EndAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Struct data = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.EndAction.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.EndAction} returns this
*/
proto.nuance.dlg.v1.common.EndAction.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.EndAction} returns this
 */
proto.nuance.dlg.v1.common.EndAction.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.EndAction.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.EndAction.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.EndAction} returns this
 */
proto.nuance.dlg.v1.common.EndAction.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.ContinueAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.ContinueAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ContinueAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && proto.nuance.dlg.v1.common.Message.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.nuance.dlg.v1.common.View.toObject(includeInstance, f),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 4, ""),
    messageSettings: (f = msg.getMessageSettings()) && proto.nuance.dlg.v1.common.MessageSettings.toObject(includeInstance, f),
    backendConnectionSettings: (f = msg.getBackendConnectionSettings()) && proto.nuance.dlg.v1.common.BackendConnectionSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.ContinueAction}
 */
proto.nuance.dlg.v1.common.ContinueAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.ContinueAction;
  return proto.nuance.dlg.v1.common.ContinueAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.ContinueAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.ContinueAction}
 */
proto.nuance.dlg.v1.common.ContinueAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.Message;
      reader.readMessage(value,proto.nuance.dlg.v1.common.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 2:
      var value = new proto.nuance.dlg.v1.common.View;
      reader.readMessage(value,proto.nuance.dlg.v1.common.View.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 5:
      var value = new proto.nuance.dlg.v1.common.MessageSettings;
      reader.readMessage(value,proto.nuance.dlg.v1.common.MessageSettings.deserializeBinaryFromReader);
      msg.setMessageSettings(value);
      break;
    case 6:
      var value = new proto.nuance.dlg.v1.common.BackendConnectionSettings;
      reader.readMessage(value,proto.nuance.dlg.v1.common.BackendConnectionSettings.deserializeBinaryFromReader);
      msg.setBackendConnectionSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.ContinueAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.ContinueAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.ContinueAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.Message.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuance.dlg.v1.common.View.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessageSettings();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.nuance.dlg.v1.common.MessageSettings.serializeBinaryToWriter
    );
  }
  f = message.getBackendConnectionSettings();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.nuance.dlg.v1.common.BackendConnectionSettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional Message message = 1;
 * @return {?proto.nuance.dlg.v1.common.Message}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.getMessage = function() {
  return /** @type{?proto.nuance.dlg.v1.common.Message} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.Message, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.Message|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
*/
proto.nuance.dlg.v1.common.ContinueAction.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional View view = 2;
 * @return {?proto.nuance.dlg.v1.common.View}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.getView = function() {
  return /** @type{?proto.nuance.dlg.v1.common.View} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.View, 2));
};


/**
 * @param {?proto.nuance.dlg.v1.common.View|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
*/
proto.nuance.dlg.v1.common.ContinueAction.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.hasView = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct data = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
*/
proto.nuance.dlg.v1.common.ContinueAction.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string id = 4;
 * @return {string}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional MessageSettings message_settings = 5;
 * @return {?proto.nuance.dlg.v1.common.MessageSettings}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.getMessageSettings = function() {
  return /** @type{?proto.nuance.dlg.v1.common.MessageSettings} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.MessageSettings, 5));
};


/**
 * @param {?proto.nuance.dlg.v1.common.MessageSettings|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
*/
proto.nuance.dlg.v1.common.ContinueAction.prototype.setMessageSettings = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.clearMessageSettings = function() {
  return this.setMessageSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.hasMessageSettings = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BackendConnectionSettings backend_connection_settings = 6;
 * @return {?proto.nuance.dlg.v1.common.BackendConnectionSettings}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.getBackendConnectionSettings = function() {
  return /** @type{?proto.nuance.dlg.v1.common.BackendConnectionSettings} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.BackendConnectionSettings, 6));
};


/**
 * @param {?proto.nuance.dlg.v1.common.BackendConnectionSettings|undefined} value
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
*/
proto.nuance.dlg.v1.common.ContinueAction.prototype.setBackendConnectionSettings = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.ContinueAction} returns this
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.clearBackendConnectionSettings = function() {
  return this.setBackendConnectionSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.ContinueAction.prototype.hasBackendConnectionSettings = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.VxmlConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.VxmlConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcesList: jspb.Message.toObjectList(msg.getResourcesList(),
    proto.nuance.dlg.v1.common.VxmlResourceReference.toObject, includeInstance),
    propertiesMap: (f = msg.getPropertiesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.VxmlConfiguration}
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.VxmlConfiguration;
  return proto.nuance.dlg.v1.common.VxmlConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.VxmlConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.VxmlConfiguration}
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.VxmlResourceReference;
      reader.readMessage(value,proto.nuance.dlg.v1.common.VxmlResourceReference.deserializeBinaryFromReader);
      msg.addResources(value);
      break;
    case 2:
      var value = msg.getPropertiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.VxmlConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.VxmlConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.VxmlResourceReference.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * repeated VxmlResourceReference resources = 1;
 * @return {!Array<!proto.nuance.dlg.v1.common.VxmlResourceReference>}
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.getResourcesList = function() {
  return /** @type{!Array<!proto.nuance.dlg.v1.common.VxmlResourceReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuance.dlg.v1.common.VxmlResourceReference, 1));
};


/**
 * @param {!Array<!proto.nuance.dlg.v1.common.VxmlResourceReference>} value
 * @return {!proto.nuance.dlg.v1.common.VxmlConfiguration} returns this
*/
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.setResourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference}
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.addResources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuance.dlg.v1.common.VxmlResourceReference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuance.dlg.v1.common.VxmlConfiguration} returns this
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * map<string, string> properties = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.getPropertiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuance.dlg.v1.common.VxmlConfiguration} returns this
 */
proto.nuance.dlg.v1.common.VxmlConfiguration.prototype.clearPropertiesMap = function() {
  this.getPropertiesMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.ResourceUnionCase = {
  RESOURCE_UNION_NOT_SET: 0,
  GRAMMAR_REFERENCE: 1,
  WORDSET_JSON: 2
};

/**
 * @return {proto.nuance.dlg.v1.common.VxmlResourceReference.ResourceUnionCase}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.getResourceUnionCase = function() {
  return /** @type {proto.nuance.dlg.v1.common.VxmlResourceReference.ResourceUnionCase} */(jspb.Message.computeOneofCase(this, proto.nuance.dlg.v1.common.VxmlResourceReference.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.VxmlResourceReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    grammarReference: (f = msg.getGrammarReference()) && proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.toObject(includeInstance, f),
    wordsetJson: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.VxmlResourceReference;
  return proto.nuance.dlg.v1.common.VxmlResourceReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference;
      reader.readMessage(value,proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.deserializeBinaryFromReader);
      msg.setGrammarReference(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWordsetJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.VxmlResourceReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrammarReference();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference;
  return proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 2:
      var value = /** @type {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.EnumResourceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.EnumResourceType = {
  SEMANTIC_MODEL: 0,
  SPEECH_GRAMMAR: 1,
  DTMF_GRAMMAR: 2,
  ASR_DLM: 3
};

/**
 * optional string uri = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference} returns this
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.prototype.setUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EnumResourceType type = 2;
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.EnumResourceType}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.prototype.getType = function() {
  return /** @type {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.EnumResourceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.EnumResourceType} value
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference} returns this
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional GrammarResourceReference grammar_reference = 1;
 * @return {?proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.getGrammarReference = function() {
  return /** @type{?proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference} */ (
    jspb.Message.getWrapperField(this, proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference, 1));
};


/**
 * @param {?proto.nuance.dlg.v1.common.VxmlResourceReference.GrammarResourceReference|undefined} value
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference} returns this
*/
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.setGrammarReference = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.nuance.dlg.v1.common.VxmlResourceReference.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference} returns this
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.clearGrammarReference = function() {
  return this.setGrammarReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.hasGrammarReference = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string wordset_json = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.getWordsetJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference} returns this
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.setWordsetJson = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.nuance.dlg.v1.common.VxmlResourceReference.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuance.dlg.v1.common.VxmlResourceReference} returns this
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.clearWordsetJson = function() {
  return jspb.Message.setOneofField(this, 2, proto.nuance.dlg.v1.common.VxmlResourceReference.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuance.dlg.v1.common.VxmlResourceReference.prototype.hasWordsetJson = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.DialogEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.DialogEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.DialogEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.DialogEvent}
 */
proto.nuance.dlg.v1.common.DialogEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.DialogEvent;
  return proto.nuance.dlg.v1.common.DialogEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.DialogEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.DialogEvent}
 */
proto.nuance.dlg.v1.common.DialogEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nuance.dlg.v1.common.DialogEvent.EventType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.DialogEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.DialogEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.DialogEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.nuance.dlg.v1.common.DialogEvent.EventType = {
  SUCCESS: 0,
  ERROR: 1,
  NO_INPUT: 2,
  NO_MATCH: 3,
  HANGUP: 4,
  CUSTOM: 5
};

/**
 * optional EventType type = 1;
 * @return {!proto.nuance.dlg.v1.common.DialogEvent.EventType}
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.getType = function() {
  return /** @type {!proto.nuance.dlg.v1.common.DialogEvent.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nuance.dlg.v1.common.DialogEvent.EventType} value
 * @return {!proto.nuance.dlg.v1.common.DialogEvent} returns this
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.DialogEvent} returns this
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string event_name = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.getEventName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.DialogEvent} returns this
 */
proto.nuance.dlg.v1.common.DialogEvent.prototype.setEventName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuance.dlg.v1.common.Selector.prototype.toObject = function(opt_includeInstance) {
  return proto.nuance.dlg.v1.common.Selector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuance.dlg.v1.common.Selector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selector.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    language: jspb.Message.getFieldWithDefault(msg, 2, ""),
    library: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuance.dlg.v1.common.Selector}
 */
proto.nuance.dlg.v1.common.Selector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuance.dlg.v1.common.Selector;
  return proto.nuance.dlg.v1.common.Selector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuance.dlg.v1.common.Selector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuance.dlg.v1.common.Selector}
 */
proto.nuance.dlg.v1.common.Selector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLibrary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuance.dlg.v1.common.Selector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuance.dlg.v1.common.Selector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuance.dlg.v1.common.Selector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuance.dlg.v1.common.Selector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLibrary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string channel = 1;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selector.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selector} returns this
 */
proto.nuance.dlg.v1.common.Selector.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string language = 2;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selector.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selector} returns this
 */
proto.nuance.dlg.v1.common.Selector.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string library = 3;
 * @return {string}
 */
proto.nuance.dlg.v1.common.Selector.prototype.getLibrary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuance.dlg.v1.common.Selector} returns this
 */
proto.nuance.dlg.v1.common.Selector.prototype.setLibrary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.nuance.dlg.v1.common);
